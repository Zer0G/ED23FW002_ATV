%implements s26_b0_da55e_Functions "C"

%function ATV_KEY_ON_Fcn0(block) void
%assign fcnBuff = ""
%openfile fcnBuff
%assign cfgTxt = ""
%openfile cfgTxt
boolean_T tmp;
/* During 'KEY_ON': '<S30>:20' */
tmp = !atv_key_signal;
if (tmp && (ATV_DW.is_HV_CTRL != ATV_IN_HVM_ON) && (ATV_DW.is_HV_CTRL != ATV_IN_HV_ON) && (ATV_DW.is_HV_CTRL != ATV_IN_HV_WAIT_INV_OFF)) {
    /* Transition: '<S30>:23' */
    /* Transition: '<S30>:25' */
    /* Exit Internal 'KEY_ON': '<S30>:20' */
    /* Exit Internal 'STARTTRIGGER': '<S30>:119' */
    ATV_DW.is_STARTTRIGGER = ATV_IN_NO_ACTIVE_CHILD_m;
    /* Exit Internal 'DRIVE_ENABLE': '<S30>:85' */
    if (ATV_DW.is_DRIVE_ENABLE == ATV_IN_DRIVE_ENABLED) {
        /* Exit 'DRIVE_ENABLED': '<S30>:88' */
        atv_runLed_out = false;
        ATV_DW.is_DRIVE_ENABLE = ATV_IN_NO_ACTIVE_CHILD_m;
    } else {
        ATV_DW.is_DRIVE_ENABLE = ATV_IN_NO_ACTIVE_CHILD_m;
    }
    /* Exit Internal 'HEATER_CTRL': '<S30>:72' */
    ATV_DW.is_HEATER_CTRL = ATV_IN_NO_ACTIVE_CHILD_m;
    /* Exit Internal 'CHG_CTRL': '<S30>:68' */
    ATV_DW.is_CHG_CTRL = ATV_IN_NO_ACTIVE_CHILD_m;
    /* Exit Internal 'HV_CTRL': '<S30>:34' */
    ATV_DW.is_HV_CTRL = ATV_IN_NO_ACTIVE_CHILD_m;
    ATV_DW.is_c3_ATV = ATV_IN_PRE_SLEEP;
    ATV_DW.temporalCounter_i1_m = 0U;
    /* Entry 'PRE_SLEEP': '<S30>:3' */
    atv_state_out = 2U;
    atv_sub_state_out = 0U;
} else {
    /* During 'HV_CTRL': '<S30>:34' */
    switch (ATV_DW.is_HV_CTRL) {
      case ATV_IN_HVM_ON:
        /* During 'HVM_ON': '<S30>:54' */
        if (ATV_DW.temporalCounter_i1_m >= 50U) {
            /* Transition: '<S30>:56' */
            ATV_DW.is_HV_CTRL = ATV_IN_HV_ON;
            /* Entry 'HV_ON': '<S30>:53' */
            atv_sub_state_out = 3U;
            ATV_B.hvp_ctrl_out = true;
            ATV_B.hvm_ctrl_out = true;
        }
        break;
      case ATV_IN_HV_ARMED:
        /* During 'HV_ARMED': '<S30>:83' */
        if (ATV_B.atv_StartBtn_din && (!ATV_B.RateTransition4)) {
            /* Transition: '<S30>:51' */
            ATV_DW.is_HV_CTRL = ATV_IN_HVM_ON;
            ATV_DW.temporalCounter_i1_m = 0U;
            /* Entry 'HVM_ON': '<S30>:54' */
            ATV_DW.startBtnArmed = false;
            atv_sub_state_out = 2U;
            ATV_B.hvp_ctrl_out = false;
            ATV_B.hvm_ctrl_out = true;
        }
        break;
      case ATV_IN_HV_OFF:
        /* During 'HV_OFF': '<S30>:52' */
        if ((!ATV_B.atv_StartBtn_din) && (!ATV_B.RateTransition4)) {
            /* Transition: '<S30>:84' */
            ATV_DW.is_HV_CTRL = ATV_IN_HV_ARMED;
            /* Entry 'HV_ARMED': '<S30>:83' */
            atv_sub_state_out = 1U;
            ATV_B.hvp_ctrl_out = false;
            ATV_B.hvm_ctrl_out = false;
        } else {
            atv_sub_state_out = 0U;
            ATV_B.hvp_ctrl_out = false;
            ATV_B.hvm_ctrl_out = false;
        }
        break;
      case ATV_IN_HV_ON:
        /* During 'HV_ON': '<S30>:53' */
        if ((ATV_DW.startBtnArmed && ATV_B.atv_StartBtn_din) || ATV_B.RateTransition4 || tmp) {
            /* Transition: '<S30>:48' */
            ATV_DW.is_HV_CTRL = ATV_IN_HV_WAIT_INV_OFF;
            ATV_DW.temporalCounter_i1_m = 0U;
            /* Entry 'HV_WAIT_INV_OFF': '<S30>:98' */
            atv_sub_state_out = 4U;
            ATV_B.hvp_ctrl_out = true;
            ATV_B.hvm_ctrl_out = true;
        }
        break;
      default:
        /* During 'HV_WAIT_INV_OFF': '<S30>:98' */
        if (ATV_DW.temporalCounter_i1_m >= 50U) {
            /* Transition: '<S30>:99' */
            /* Transition: '<S30>:47' */
            ATV_DW.is_HV_CTRL = ATV_IN_HV_OFF;
            /* Entry 'HV_OFF': '<S30>:52' */
        }
        break;
    }
    /* During 'CHG_CTRL': '<S30>:68' */
    switch (ATV_DW.is_CHG_CTRL) {
      case ATV_IN_CHG_OFF:
        /* During 'CHG_OFF': '<S30>:62' */
        if (ATV_B.RateTransition4 && ((!ATV_B.hvp_ctrl_out) || (ATV_DW.temporalCounter_i2 < 100U))) {
            /* Transition: '<S30>:64' */
            ATV_DW.is_CHG_CTRL = ATV_IN_HVM_ON_n;
            ATV_DW.temporalCounter_i2 = 0U;
            /* Entry 'HVM_ON': '<S30>:66' */
        }
        break;
      case ATV_IN_HVM_ON_n:
        /* During 'HVM_ON': '<S30>:66' */
        if ((!ATV_B.RateTransition4) || ATV_B.hvp_ctrl_out) {
            /* Transition: '<S30>:61' */
            ATV_DW.is_CHG_CTRL = ATV_IN_CHG_OFF;
            ATV_DW.temporalCounter_i2 = 0U;
            /* Entry 'CHG_OFF': '<S30>:62' */
            ATV_B.chg_ctrl_out = false;
            ATV_B.hvm_ctrl_out = false;
        } else if (ATV_DW.temporalCounter_i2 >= 150U) {
            /* Transition: '<S30>:63' */
            ATV_DW.is_CHG_CTRL = ATV_IN_HV_ON_p;
            /* Entry 'HV_ON': '<S30>:65' */
        } else {
            ATV_B.chg_ctrl_out = false;
            ATV_B.hvm_ctrl_out = true;
        }
        break;
      default:
        /* During 'HV_ON': '<S30>:65' */
        if ((!ATV_B.RateTransition4) || ATV_B.hvp_ctrl_out) {
            /* Transition: '<S30>:59' */
            /* Transition: '<S30>:60' */
            ATV_DW.is_CHG_CTRL = ATV_IN_CHG_OFF;
            ATV_DW.temporalCounter_i2 = 0U;
            /* Entry 'CHG_OFF': '<S30>:62' */
            ATV_B.chg_ctrl_out = false;
            ATV_B.hvm_ctrl_out = false;
        } else {
            ATV_B.chg_ctrl_out = true;
            ATV_B.hvm_ctrl_out = true;
        }
        break;
    }
    /* During 'HEATER_CTRL': '<S30>:72' */
    if (ATV_DW.is_HEATER_CTRL == ATV_IN_HEATER_OFF) {
        ATV_B.heater_ctrl_out = false;
        /* During 'HEATER_OFF': '<S30>:69' */
        if (ATV_B.RateTransition5) {
            /* Transition: '<S30>:78' */
            ATV_DW.is_HEATER_CTRL = ATV_IN_HVM_ON_n;
            /* Entry 'HVM_ON': '<S30>:73' */
            ATV_B.heater_ctrl_out = true;
        }
    } else {
        ATV_B.heater_ctrl_out = true;
        /* During 'HVM_ON': '<S30>:73' */
        if (!ATV_B.RateTransition5) {
            /* Transition: '<S30>:77' */
            ATV_DW.is_HEATER_CTRL = ATV_IN_HEATER_OFF;
            /* Entry 'HEATER_OFF': '<S30>:69' */
            ATV_B.heater_ctrl_out = false;
        }
    }
    /* During 'DRIVE_ENABLE': '<S30>:85' */
    switch (ATV_DW.is_DRIVE_ENABLE) {
      case ATV_IN_DRIVE_ENABLED:
        atv_state_out = 5U;
        ATV_B.en_inv_rear_out = true;
        ATV_B.en_inv_front_out = true;
        /* During 'DRIVE_ENABLED': '<S30>:88' */
        if (ATV_DW.is_HV_CTRL != ATV_IN_HV_ON) {
            /* Transition: '<S30>:92' */
            /* Transition: '<S30>:93' */
            /* Transition: '<S30>:94' */
            /* Exit 'DRIVE_ENABLED': '<S30>:88' */
            atv_runLed_out = false;
            ATV_DW.is_DRIVE_ENABLE = ATV_IN_IDLE;
            /* Entry 'IDLE': '<S30>:87' */
            atv_state_out = 4U;
            ATV_B.en_inv_rear_out = false;
            ATV_B.en_inv_front_out = false;
        }
        break;
      case ATV_IN_HV_DEL:
        /* During 'HV_DEL': '<S30>:96' */
        if (ATV_DW.temporalCounter_i3 >= 50U) {
            /* Transition: '<S30>:97' */
            ATV_DW.is_DRIVE_ENABLE = ATV_IN_DRIVE_ENABLED;
            /* Entry 'DRIVE_ENABLED': '<S30>:88' */
            atv_state_out = 5U;
            ATV_B.en_inv_rear_out = true;
            ATV_B.en_inv_front_out = true;
            atv_runLed_out = true;
        } else {
            if (ATV_DW.is_HV_CTRL != ATV_IN_HV_ON) {
                /* Transition: '<S30>:86' */
                ATV_DW.is_DRIVE_ENABLE = ATV_IN_IDLE;
                /* Entry 'IDLE': '<S30>:87' */
                atv_state_out = 4U;
                ATV_B.en_inv_rear_out = false;
                ATV_B.en_inv_front_out = false;
            }
        }
        break;
      default:
        atv_state_out = 4U;
        ATV_B.en_inv_rear_out = false;
        ATV_B.en_inv_front_out = false;
        /* During 'IDLE': '<S30>:87' */
        if (ATV_DW.is_HV_CTRL == ATV_IN_HV_ON) {
            /* Transition: '<S30>:95' */
            ATV_DW.is_DRIVE_ENABLE = ATV_IN_HV_DEL;
            ATV_DW.temporalCounter_i3 = 0U;
        }
        break;
    }
    /* During 'STARTTRIGGER': '<S30>:119' */
    if (ATV_DW.is_STARTTRIGGER == ATV_IN_STARTTRIGGER_OFF) {
        /* During 'STARTTRIGGER_OFF': '<S30>:117' */
        if (!ATV_B.atv_StartBtn_din) {
            /* Transition: '<S30>:114' */
            ATV_DW.is_STARTTRIGGER = ATV_IN_STARTTRIGGER_ON;
            /* Entry 'STARTTRIGGER_ON': '<S30>:118' */
            ATV_DW.startBtnArmed = true;
        }
    } else {
        /* During 'STARTTRIGGER_ON': '<S30>:118' */
        if (ATV_B.atv_StartBtn_din) {
            /* Transition: '<S30>:116' */
            ATV_DW.is_STARTTRIGGER = ATV_IN_STARTTRIGGER_OFF;
        }
    }
}
%closefile cfgTxt
%<cfgTxt>
%closefile fcnBuff
%assign fcnProtoType = ""
%openfile fcnProtoType
static void ATV_KEY_ON(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(3, 0, fcnProtoType)>
%return fcnBuff
%endfunction

%function ATV_Off_Fcn1(block) void
%assign fcnBuff = ""
%openfile fcnBuff
%assign cfgTxt = ""
%openfile cfgTxt
real_T PumpSt;
/* Truth Table Function 'Off': '<S33>:77' */
if (TInverterLow && TMotorLow && ATV_B.RelationalOperator5) {
    /* Condition '#1': '<S33>:77:10' */
    /* Condition '#2': '<S33>:77:14' */
    /* Condition '#3': '<S33>:77:18' */
    /* Action '1': '<S33>:77:30' */
    PumpSt = 0.0;
} else {
    /* Action '2': '<S33>:77:36' */
    PumpSt = 1.0;
}
return PumpSt;
%closefile cfgTxt
%<cfgTxt>
%closefile fcnBuff
%assign fcnProtoType = ""
%openfile fcnProtoType
static real_T ATV_Off(\
%assign comma = ""
%<comma>boolean_T TInverterLow\
%assign comma = ", "
%<comma>boolean_T TMotorLow\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(3, 1, fcnProtoType)>
%return fcnBuff
%endfunction

%function ATV_On_Fcn2(block) void
%assign fcnBuff = ""
%openfile fcnBuff
%assign cfgTxt = ""
%openfile cfgTxt
real_T PumpSt;
/* Truth Table Function 'On': '<S33>:92' */
if (TInverterHi) {
    /* Condition '#1': '<S33>:92:10' */
    /* Action '1': '<S33>:92:34' */
    PumpSt = 1.0;
} else if (TMotorHi) {
    /* Condition '#2': '<S33>:92:14' */
    /* Action '1': '<S33>:92:34' */
    PumpSt = 1.0;
} else if (ATV_B.RelationalOperator4) {
    /* Condition '#3': '<S33>:92:18' */
    /* Action '1': '<S33>:92:34' */
    PumpSt = 1.0;
} else {
    /* Action '2': '<S33>:92:40' */
    PumpSt = 0.0;
}
return PumpSt;
%closefile cfgTxt
%<cfgTxt>
%closefile fcnBuff
%assign fcnProtoType = ""
%openfile fcnProtoType
static real_T ATV_On(\
%assign comma = ""
%<comma>boolean_T TInverterHi\
%assign comma = ", "
%<comma>boolean_T TMotorHi\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(3, 2, fcnProtoType)>
%return fcnBuff
%endfunction

