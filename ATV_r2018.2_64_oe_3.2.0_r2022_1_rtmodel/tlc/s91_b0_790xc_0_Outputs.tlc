%implements s91_b0_790xc_0_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/* {S!d28802}Chart: '<S4>/Chart' */
if (localDW->temporalCounter_i1 < 63U) {
    localDW->temporalCounter_i1++;
}
/* Gateway: CANBUS_Reception_BMS/Chart */
/* During: CANBUS_Reception_BMS/Chart */
if (localDW->is_active_c4_ATV == 0U) {
    /* Entry: CANBUS_Reception_BMS/Chart */
    localDW->is_active_c4_ATV = 1U;
    /* Entry Internal: CANBUS_Reception_BMS/Chart */
    /* Transition: '<S44>:4' */
    localDW->is_c4_ATV = ATV_IN_NO_RX;
    /* Entry 'NO_RX': '<S44>:5' */
    localB->out = false;
} else if (localDW->is_c4_ATV == ATV_IN_NO_RX) {
    localB->out = false;
    /* During 'NO_RX': '<S44>:5' */
    if (rtu_in) {
        /* Transition: '<S44>:6' */
        localDW->is_c4_ATV = ATV_IN_RX;
        localDW->temporalCounter_i1 = 0U;
        /* Entry 'RX': '<S44>:3' */
        localB->out = true;
    }
} else {
    localB->out = true;
    /* During 'RX': '<S44>:3' */
    if ((!rtu_in) && (localDW->temporalCounter_i1 >= 50U)) {
        /* Transition: '<S44>:7' */
        localDW->is_c4_ATV = ATV_IN_NO_RX;
        /* Entry 'NO_RX': '<S44>:5' */
        localB->out = false;
    }
}
/* {E!d28802}End of Chart: '<S4>/Chart' */
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(0, 1, 0)>
%endif
%if SLibCG_ArgAccessed(0, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 1, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void ATV_Chart(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 1, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%endif
%<comma>boolean_T rtu_in\
%assign comma = ", "
%<comma>B_Chart_ATV_T *localB\
%assign comma = ", "
%<comma>DW_Chart_ATV_T *localDW\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 1, fcnProtoType)>
%endfunction
